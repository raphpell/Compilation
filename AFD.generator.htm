<!DOCTYPE HTML>
<html>
<head>
	<title>Transformation ER en AFD</title>
	<link rel="stylesheet" type="text/css" href="css/styles.css">
	<style>
		#eRESyntax {
			border:1px solid #000;
			padding: 0.5em;
			width:100%;
			}
		#eExportResult {
			border:1px solid #000;
			padding: 0.5em;
			height:100px;
			width:90%;
			}
		FIELDSET {
			float: left;
			margin: 0 1% 1em 0;
			padding: 1%;
			}
		FIELDSET LEGEND {
			font-weight: bold;
			}
		FIELDSET DL {
			margin: 0;
			}
	</style>
</head>
<body spellcheck="false">
<div id="eTITLE">
	<a href="index.htm">Index</a>
	<h1>Transformation ER en AFD</h1>
</div>

<div id="eMenu">
	<label for="eRegExpList">Exemple de token : </label>
	<select id="eRegExpList"></select>
</div>
<label for="eRE">Expression régulière : </label>
<textarea id="eRE">[^a-z]a|\db|1c|[^B]d|.e</textarea>
<input type="button" id="eBtnCreate" value="Générer" title="Créer l'AFN, l'AFD et sa représentation JavaScript.">
<input type="button" onclick="regexpSyntax()" value="Syntaxe" title="Syntaxe des expressions régulières.">
<input type="button" value="Visualiser l'analyse" onclick="previewRE()" title="Analyse lexicale et syntaxique de l'expression régulière.">

<hr>

<fieldset><legend>NFA</legend>
	<dl>
		<dt>
			<input type="button" value="Visualiser le NFA" onclick="previewNFA()" title="Matrice et graphe du NFA.">
			<a href="AFN.info.htm" target="_INFO">info</a>
		</dt>
		<dt><input type="button" id="eBtnRenameNFA" value="Renommer ses états" title="Renomme les états."></dt>
		<dt>
			<input type="button" id="eBtnValidate" value="Valider son alphabet" title="Rend l'alphabet déterministe !">
			<a href="AFN.ValidationAlphabet.htm" target="_INFO">info</a>
		</dt>
		<dt>
			<input type="checkbox" id="eAutoValidation" checked>
			<label for="eAutoValidation" title="Rend les éléments de l'alphabet unique.">
				Valider automatiquement.
			</label>
		</dt>
	</dl>
</fieldset>
<fieldset><legend>AFD</legend>
	<dl>
		<dt>
			<input type="button" value="Visualiser l'AFD" onclick="previewDFA()" title="Matrice et graphe de l'AFD.">
			<a href="AFD.info.htm" target="_INFO">info</a>
		</dt>
		<dt><input type="button" id="eBtnRenameDFA" value="Renommer ses états" title="Renomme les états."></dt>
		<dt>
			<input type="button" id="eBtnMinimize" value="Minimiser sa taille" title="Diminue la taille de l'automate !">
		</dt>
		<dt>
			<input type="checkbox" id="eAutoMinimization" checked>
			<label for="eAutoMinimization" title="Compresse la matrice.">
				Minimiser automatiquement.
			</label>
		</dt>
	</dl>
</fieldset>
<fieldset><legend>AFD en JavaScript</legend>
	<dl>
		<dt>
			<input type="button" id="eBtnExport" value="Exporter">
			<input type="checkbox" id="eAutoExport" checked><label for="eAutoExport">Exporter automatiquement.</label>
		</dt>
		<dt><input type="checkbox" id="eExportWhiteSpace"><label for="eExportWhiteSpace">Espaces blancs.</label></dt>
		<dt>
			<input type="checkbox" id="eExportCompressed"><label for="eExportCompressed">Compressé.</label>
			<a href="AFD.compression.htm" target="_INFO">info</a>
		</dt>
		<dt>
			<textarea id="eExportResult"></textarea>
			<div><label>Nombre de caractères : </label><b id="eExportSize"></b></div>
		</dt>
	</dl>
</fieldset>
<fieldset><legend>Zone teste</legend>
	<dl>
		<dt>
			<label for="eInput">Texte : </label>
			<textarea id="eInput">1aabbaaab</textarea>
		</dt>
		<dt>
			<input type="button" id="eBtnMatch" value="Analyser">
			<input type="checkbox" id="eAutoMatch"><label for="eAutoMatch">Analyser automatiquement.</label>
		</dt>
		<dt><pre id="eResult"></pre></dt>
		<dt><small><dl id="eLexersTest"></dl></small></dt>
	</dl>
</fieldset>
<fieldset><legend>AFD en RE <sup style="color:red;">experimental</sup></legend>
	<dl>
		<dt><input type="button" id="eBtnToRE" value="Analyser"></dt>
		<dt><textarea id="eDFAToRE"></textarea></dt>
	</dl>
</fieldset>

<!-- FRAMEWORK... -->
<script src="js/framework.js"></script>
<script src="js/lexer.automaton.js"></script>
<script src="js/parserLR.js"></script>
<script src="src/regexp/node.js"></script>
<script src="src/regexp/lexer.js"></script>
<script src="src/regexp/parser.js"></script>
<script src="js/automaton.js"></script>

<!-- DIVERS... -->
<script src="js/regexp.examples.js"></script>
<script>
_( 'eTITLE,eMenu' )
_( 'eRE,eInput,eResult' )
_( 'eRegExpList' )
_( 'eBtnCreate' )
_( 'eBtnRenameNFA,eBtnValidate' )
_( 'eBtnRenameDFA,eBtnMinimize' )
_( 'eBtnMatch' )
_( 'eBtnExport,eExportResult,eExportWhiteSpace,eExportCompressed,eExportSize' )
_( 'eAutoValidation,eAutoMinimization,eAutoMatch,eAutoExport' )
_( 'eBtnToRE,eAutoToRE,eDFAToRE' )
_( 'eLexersTest' )

previewRE = (function(){
	var f = function(){ if( ! oNFA.M ) oNFA.buildTable(); previewREScanning({type:'RE',re:eRE.value }) }
	f.refresh = function(){ if( ! oNFA.M ) oNFA.buildTable(); previewREScanning.refresh({type:'RE',re:eRE.value}) }
	return f
	})()
previewNFA = (function(){
	var f = function(){ if( ! oNFA.M ) oNFA.buildTable(); previewFA({type:'NFA',re:eRE.value, oFA:oNFA}) }
	f.refresh = function(){ if( ! oNFA.M ) oNFA.buildTable(); previewFA.refresh({type:'NFA',re:eRE.value, oFA:oNFA}) }
	return f
	})()
previewDFA = (function(){
	var f = function(){ previewFA({type:'DFA',re:eRE.value, oFA:oDFA}) }
	f.refresh = function(){ previewFA.refresh({type:'DFA',re:eRE.value, oFA:oDFA}) }
	return f
	})()
refreshWindows =function(){
	if( previewREScanning.type ) previewRE.refresh()
	if( previewFA.type ) window[ 'preview' + previewFA.type ].refresh()
	}
	

eBtnCreate.onclick =function(){
	parseRE( eAutoValidation.checked, eAutoMinimization.checked, eAutoMatch.checked, eAutoExport.checked )
	refreshWindows()
	}
eBtnRenameNFA.onclick =function(){
	oDFA = new DFA( oNFA.renameStates())
	if( eAutoMinimization.checked ) oDFA = DFA.minimize( oDFA )
	refreshWindows()
	}
eBtnValidate.onclick =function(){
	parseRE( true, eAutoMinimization.checked, eAutoMatch.checked, eAutoExport.checked )
	refreshWindows()
	}
eBtnRenameDFA.onclick =function(){
	oDFA.renameStates()
	refreshWindows()
	}
eBtnMinimize.onclick =function(){
	oDFA = DFA.minimize( oDFA )
	refreshWindows()
	}
eBtnMatch.onclick =function(){ match()}
eBtnToRE.onclick =function(){
	eDFAToRE.value = DFA.toRE( oDFA )
	}

var exportBasic =function(){ exportDFA( eExportWhiteSpace.checked, !eExportCompressed.checked )}
eBtnExport.onclick =exportBasic
eExportWhiteSpace.onchange =exportBasic
eExportCompressed.onchange =exportBasic
;( function( mSelected ){
		var _add =function( a ){
			var eChild = document.createElement('option')
			eChild.innerHTML = a[0]
			eChild.value = a[1].source
			eRegExpList.appendChild( eChild )
			}
		mSelected = mSelected || null
		for( var i=0, ni=aRegExpList.length; i<ni; i++ ) _add( aRegExpList[i])
		eRegExpList.value = mSelected
		return eRegExpList
	})().onchange =function(){
		eRE.value = eRegExpList.value
		eBtnCreate.onclick()
		}

</script>

<!-- URL QUERY -->
<script>
$_GET =(function(){
	var o = {}
	if( window.location.search.length > 1 ){
		for(var m, n=0, aCouples = window.location.search.substr(1).split("&"); m=aCouples[n]; n++ ){
			m = m.split("=")
			o[unescape(m[0])] = m.length>1 ? unescape(m[1]) : ''
			}
		}
	return o
	})()
	
if( $_GET[calcul]){
	eTITLE.innerHTML = '<h1>...</h1>'
	eMenu.style.display = 'none'
	}
	
var aItemCalcul
var calcul =function( item ){
	aItemCalcul = item
	eTITLE.innerHTML = '<h1>Automate '+ item[0] +'</h1>'
	eRE.value = item[1]
	eInput.value = ''
	parseRE( 1, 1, 0, 0 )
	exportDFA()
	}
</script>

<script>
var oDFA, oNFA

var parseRE =function( bValidate, bMinimize, bMatch, bExport ){
	var oTree = RegExp2AST( eRE.value )
	oNFA = NFA( oTree )
	if( bValidate ){
		NFA.validateAlphabet( oNFA )
		oNFA.renameStates()
		}
	oDFA = new DFA( oNFA )
	if( bMinimize ) oDFA = DFA.minimize( oDFA )
	if( bMatch ) match()
		else clearTest()
	if( bExport ) exportBasic()
		else clearExport()
	}

var clearTest =function(){ eResult.innerHTML = '' }
var clearExport =function(){ eExportResult.value = '' }

var match =function( s, n ){
	clearTest()
	// oDFA.buildTable()
	
	var sWordChars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_'
	var isWordChar = function( sChar ){ return sWordChars.indexOf( sChar ) > -1 }

	var sInput = s || eInput.value
	, nIndex= n || 0
	, nStart = nIndex
	, sChar
	, sState=oDFA.I
	, LongestMatch = null
	, bBoundary = isWordChar( sInput[nIndex])
	Bufferize.init( 'input: <b style="background:yellow;">'+ sInput +'</b>\n' )

	if( sInput.length!=0 )
		while( true ){
			sChar = sInput[ nIndex ]
			nIndex++ 
			sNextState = oDFA.M.nextState( sState, sChar )
			Bufferize( '('+ sState +') "'+ sChar +'" &rarr; ('+ sNextState +')\n' )
			sState = sNextState
			if( nIndex==sInput.length ) break;
			if( sState<=0 ) break;
			if( oDFA.F.have( sState )) LongestMatch = { matched: sInput.substring( nStart, nIndex )}
			}
	if( oDFA.F.have( sState )) LongestMatch = { matched: sInput.substring( nStart, nIndex )}

	if( ! sState ) Bufferize( '<small style="color:blue;">DEAD_NODE</small>\n' )
	eResult.innerHTML = Bufferize(
					'<b style="color:'+
					( LongestMatch
						? 'green;">MATCH <i style="background:yellow;">' + LongestMatch.matched +'</i>'
						: 'orange;">MATCH_FAILED'
						)
					+ '</b>\n'
			//	+\n+ eResult.innerHTML
				)
	}
var exportDFA =function( bWhiteSpace, bUnCompressed ){
	clearExport()
	var sResult = DFA.toJS( oDFA, bWhiteSpace, bUnCompressed )
	eExportResult.value = sResult
	eExportSize.innerHTML = sResult.length
	if( aItemCalcul && window.parent ){
		window.parent.Calcul.add( aItemCalcul, oDFA, sResult, 'nextToken' )
		aItemCalcul = false
		refreshWindows()
		}
	}

eBtnCreate.onclick()
match()
eExportWhiteSpace.onchange()
</script>


</body>
</html>