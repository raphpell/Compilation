<?xml version='1.0' encoding='UTF-8'?>
<?xml-stylesheet type="text/xsl" href="Doc.xsl"?> 
<class name="Stack" language="JavaScript">
	<desc>
		<script>
			document.getElementById('eTopLeftMenu').innerHTML +=
			' - &lt;a href="../UnitTest/Stack.xml"&gt;Tests unitaires associés&lt;/a&gt;'
		</script>
		Fonction retournant une pile gérant les parents courants...
		elle prend en argument son lexer...

		<p>La pile des parents contient la liste des ancêtres des futurs tokens trouvés.</p>
		<p>
			Le premier élément ajouté à la pile est la racine de l'arbre créée avant le lancement de l'analyse.<br/>
			Lorsqu'un token parent est créé il est ajouté au sommet de la pile; <br/>
			Lorsque la fin d'un token parent est détecté il est dépilé du sommet de pile. <br/>
			L'analyse est stoppée quand la pile est vide.
		</p>
		<p> Lors d'un changement de taille, elle défini:</p><ul>
			<li>le parent courant</li>
			<li>la syntaxe à utiliser</li>
		</ul>
		<p>Et lors d'un dépilage, elle définie la ligne finale du parent dépilé (dépendante du dernier enfant trouvé).</p>
	</desc>
	<syntax>
		<code><![CDATA[ var oStack = Stack( MyLexer ) ]]></code>
		<arguments>
			<arg name="MyLexer" type="Object">
				<desc>Un lexer créé avec la méthode <code>LexerClass</code>.</desc>
			</arg>
		</arguments>
	</syntax>
	<group name="oStack">
		<properties name="Attributs privés">
			<variable name="a" type="Array">
				<desc>Pile.</desc>
			</variable>
			<variable name="n" type="Number">
				<desc>Taille de la pile.</desc>
			</variable>
		</properties>
		<methods name="Méthodes">
			<function name="pop">
				<desc>Dépile un élément.</desc>
				<returnValue type="Number">
					<desc>Longueur de la pile.</desc>
				</returnValue>
			</function>
			<function name="push">
				<desc>Empile un élément.</desc>
				<arguments>
					<arg type="HTMLElement" name="e">
						<desc>Élément empilé.</desc>
					</arg>
				</arguments>
				<returnValue type="HTMLElement">
					<desc>Élément empilé.</desc>
				</returnValue>
			</function>
			<function name="top">
				<desc>Retourne l'élément en sommet de pile sans le dépiler.</desc>
				<returnValue type="HTMLElement">
					<desc>Élément en sommet de pile.</desc>
				</returnValue>
			</function>
			<function name="unshift">
				<desc>Ajoute un élément sous la pile.</desc>
				<arguments>
					<arg type="HTMLElement" name="e">
						<desc>Élément à placer sous la pile.</desc>
					</arg>
				</arguments>
			</function>
		</methods>
	</group>
</class>