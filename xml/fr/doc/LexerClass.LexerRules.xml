<?xml version='1.0' encoding='UTF-8'?>
<?xml-stylesheet type="text/xsl" href="Doc.xsl"?> 
<class name="LexerRules" language="JavaScript">
	<desc>
		<script>
			document.getElementById('eTopLeftMenu').innerHTML +=
			' - &lt;a href="../UnitTest/LexerRules.xml"&gt;Tests unitaires associés&lt;/a&gt;'
		</script>
		<h4>Définitions des tokens (ER ou AFD)</h4>
		<p>Une définition détermine un ou plusieurs types de lexème pouvant être trouvés (cas AFD).</p>
		<blockquote><cite>
			Elles peuvent être ajoutées une et une seule fois sous un nom associé.<br/>
			Si une tentative d'accès à une définition inexistante est réalisée, une erreur est lancée.
		</cite></blockquote>
		<h4>Règles d'analyse</h4>
		<p>Une régle détermine la liste des définitions à tester pour une 'syntaxe'.</p>
		<blockquote><cite>
			Elles peuvent être ajoutées une et une seule fois sous un nom associé.<br/>
			Si une tentative d'accès à une règle inexistante est réalisée, une erreur est lancée.
		</cite></blockquote>
	</desc>
	<group name="Objet LexerRules">
		<methods name="Méthode privée">
			<function name="Dictionary">
				<desc>Créé un dictionnaire de données.</desc>
				<arguments>
					<arg type="String" name="sId">
						<desc>Nom du dictionnaire.</desc>
					</arg>
				</arguments>
				<returnValue type="Object">
					<desc>Un dictionnaire de données.</desc>
				</returnValue>
			</function>
		</methods>
		<properties name="Attributs">
			<variable name="CSS" type="Object">
				<desc>
					Classes css des tokens. 
					Il est possible d'affecter aux tokens une ou plusieurs classes css, 
					pour mieux les visualiser lors de l'affichage du scannage.
				</desc>
			</variable>
			<variable name="Rules" type="Dictionary">
				<desc>Dictionnaire des règles</desc>
			</variable>
			<variable name="Tokens" type="Dictionary">
				<desc>Dictionnaire des tokens.</desc>
			</variable>
			<variable name="Translation" type="Object">
				<desc>
					Traduction des tokens. 
					Les noms de token n'étant pas forcement explicite, 
					le lexer offre la possibilité de les renommer.
				</desc>
			</variable>
		</properties>
		<methods name="Méthodes">
			<function name="addCSSClass">
				<desc>Associe des noms de classe css à des noms de token.</desc>
				<arguments>
					<arg type="Mixte" name="m">
						<desc>
Si l'argument est de type:
<ul>
	<li><code>Array</code> : Chaque élément doit être une chaîne de la forme:<br/>
		className + '=' + liste de noms de token séparés par le caractère '|'<br/>
		<b>Exemple:</b>
		<code>'punctuator=ELISION|DOT|SEMI|QUESTION|COLON'</code>
	</li>
	<li><code>String</code> : Il doit être l'équivalent du tableau précédant regroupé avec le caractère '&amp;'.
		
	</li>
</ul>
						</desc>
					</arg>
				</arguments>
			</function>
			<function name="addRule">
				<desc>Ajoute une règle d'analyse créée avec <code>makeRule</code>.</desc>
				<arguments>
					<arg type="String" name="sName">
						<desc>Nom de la règle.</desc>
					</arg>
					<arg type="String" name="sTokens">
						<desc>Liste de noms de token séparés par le symbole '|'.</desc>
					</arg>
				</arguments>
				<returnValue type="Mixte">
					<desc>La règle ajoutée est retournée.</desc>
				</returnValue>
			</function>
			<function name="addRules">
				<desc>Ajoute des règles d'analyse.</desc>
				<arguments>
					<arg type="Array" name="aRules">
						<desc>
							Liste de règle d'analyse. Une règle est ici un tableau à deux élements contenant :
							<ul>
								<li>le nom de la règle.</li>
								<li>la liste de noms de token séparés par le symbole '|'.</li>
							</ul>
						</desc>
					</arg>
				</arguments>
				<returnValue type="Array">
					<desc>Les règles créées sont retournées.</desc>
				</returnValue>
			</function>
			<function name="addTokens">
				<desc>Ajoute des modèles de tokens créés avec <code>makeToken</code>.</desc>
				<arguments>
					<arg type="Array" name="aTokens">
						<desc>
							Liste de tokens. Un token est ici un tableau à deux élements contenant :
							<ul>
								<li>le nom du token.</li>
								<li>le modèle du token.</li>
							</ul>
						</desc>
					</arg>
				</arguments>
				<returnValue type="Array">
					<desc>Les tokens créés sont retournés.</desc>
				</returnValue>
			</function>
			<function name="makeToken">
				<desc>CETTE FONCTION EST À IMPLÉMENTER<br/>
					Créé un modèle de token.
				</desc>
				<arguments>
					<arg type="String" name="sName">
						<desc>Nom de token.</desc>
					</arg>
					<arg type="Mixte" name="mModele">
						<desc>Modèle de token (expression règulière, automate, ...).</desc>
					</arg>
				</arguments>
				<returnValue type="Mixte">
					<desc>Modèle définitif du token.</desc>
				</returnValue>
			</function>
			<function name="makeRule">
				<desc> Créé une règle d'analyse. </desc>
				<arguments>
					<arg type="String" name="sName">
						<desc>Nom de la règle.</desc>
					</arg>
					<arg type="String" name="sTokens">
						<desc>Liste de noms de token séparés par le symbole '|'.</desc>
					</arg>
				</arguments>
				<returnValue type="Array">
					<desc>
						La règle créée est retournée.<br/>
						Par défaut elle retourne un tableau contenant les modèles d'analyse de chaque token de la règle.<br/>
						Si une règle d'analyse est rencontrée dans les noms de token, les tokens de cette règle sont ajoutés.
					</desc>
				</returnValue>
			</function>
			<function name="setPreviousTokenOf">
				<desc>.</desc>
				<arguments>
					<arg type="___" name="___">
						<desc>.</desc>
					</arg>
				</arguments>
				<returnValue type="___">
					<desc>.</desc>
				</returnValue>
			</function>
			<function name="setTokensTranslation">
				<desc>.</desc>
				<arguments>
					<arg type="___" name="___">
						<desc>.</desc>
					</arg>
				</arguments>
				<returnValue type="___">
					<desc>.</desc>
				</returnValue>
			</function>
		</methods>
	</group>
</class>