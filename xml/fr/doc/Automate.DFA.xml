<?xml version='1.0' encoding='UTF-8'?>
<?xml-stylesheet type="text/xsl" href="Doc.xsl"?> 
<class name="DFA" language="JavaScript">
	<desc>Fonction générant un AFD depuis un AFN.</desc>
	<syntax>
		<code><![CDATA[ oDFA = new DFA( oNFA [, sTokenName ] ) ]]></code>
		<arguments>
			<arg name="oNFA" type="Automate">
				<desc>Un Automate Fini Non déterministe.</desc>
			</arg>
			<arg name="sTokenName" type="String" opt="1">
				<desc>Nom de token associé aux états finaux.</desc>
			</arg>
		</arguments>
	</syntax>
	<group name="Instance(s) DFA">
		<properties name="Attributs">
			<variable name="type" type="String">
				<desc>Valeur par défaut: "DFA".</desc>
			</variable>
			<variable name="M" type="Object">
				<desc>Matrice de transition.</desc>
			</variable>
		</properties>
		<methods name="Méthodes prototype">
			<function name="minimize">
				<desc>
					Réduit si possible la taille de l'automate (Nombre d'état et alphabet).<br/>
					Choix de la renumération des états en option.<br/>
					Une description plus compléte est à la page <a href="../../../AFD.info.htm">DFA: minimisation</a>
				</desc>
				<arguments>
					<arg type="Number" name="nStateIDCounter" opt="1" default="2">
						<desc>Premier nombre utilisé pour renuméroter les états.</desc>
					</arg>
					<arg type="Boolean" name="bAll" opt="1">
						<desc>Indique si l'état initial(=1) et l'état puit(=0) doivent-être renumérotés aussi.</desc>
					</arg>
				</arguments>
				<returnValue type="this"></returnValue>
			</function>
			<function name="minimizeA">
				<desc>
					Réduit si possible l'alphabet de l'automate.
				</desc>
				<returnValue type="this"></returnValue>
			</function>
			<function name="minimizeS">
				<desc>
					Réduit si possible le nombre d'état de l'automate.
				</desc>
				<returnValue type="this"></returnValue>
			</function>
			<function name="test">
				<desc>Permet de savoir la plus grande portion de texte pouvant être reconnue par l'automate.</desc>
				<arguments>
					<arg type="String" name="sText">
						<desc>Chaîne où est réalisé la recherche.</desc>
					</arg>
					<arg type="Number" name="nIndex" opt="1" default="0">
						<desc>Index dans la chaîne.</desc>
					</arg>
				</arguments>
				<returnValue type="String">
					<desc>
Elle retourne toujours la plus grande chaîne trouvée depuis <code>nIndex</code>.<br/>
Par défaut, si aucune portion n'est reconnue, elle retourne <code>null</code>.
					</desc>
				</returnValue>
			</function>
			<function name="toJS">
				<desc>
Transforme l'automate en un format JavaScript (différent de JSON).<br/>
<b>Objectif:</b> Obtenir le code le plus petit possible... pour le lexer.
				</desc>
				<arguments>
					<arg type="Boolean" name="bWhiteSpace" default="false">
						<desc>Ajoute des espaces blancs pour le rendre lisible.</desc>
					</arg>
					<arg type="Boolean" name="bUnCompressed" default="false">
						<desc>Décompresse l'automate pour le rendre compréhensible.</desc>
					</arg>
				</arguments>
				<returnValue type="String"></returnValue>
			</function>
			<function name="toRE">
				<desc>En test. Retransforme le DFA en expression régulière.</desc>
				<returnValue type="String"></returnValue>
			</function>
		</methods>
	</group>
	
	<group name="Objet DFA">
		<methods name="">
			<function name="aggregate">
				<desc>Créé un AFD validé et minimisé depuis deux autres.</desc>
				<arguments>
					<arg type="DFA" name="oDFA1">
						<desc>Un premier AFD.</desc>
					</arg>
					<arg type="DFA" name="oDFA2">
						<desc>Un deuxième AFD.</desc>
					</arg>
				</arguments>
				<returnValue type="DFA">
					<desc>
					</desc>
				</returnValue>
			</function>
		</methods>
	</group>
</class>